#include <bits/stdc++.h>

using namespace std;

#define int    long long
#define vi     vector<int>
#define pii    pair<int, int>
#define all(v) v.begin(), v.end()
#define dpp(arr,val) memset(arr,val,sizeof(arr))
template<typename T> ostream& operator<<(ostream& os, vector<T>& v){for (auto& i : v) os << i << ' ';return os;}
template<typename T> istream& operator>>(istream& is, vector<T>& v){for (auto& i : v) is >> i;return is;}
void FastIO(){ios_base::sync_with_stdio(false);cin.tie(nullptr);}
void UseFile(){freopen("divsnums.in", "r", stdin);}
const int mod = 1000000007;
//const int sz = 1e5+10;
const double PI = 3.14159265358979323846;

void solve()
{
    string s; cin >> s;
    int sz = s.size();
    s = '$' + s;

    vi prefix_a(sz + 1, 0), prefix_b(sz + 1, 0);
    for(int i = 1; i <= sz; i++){
        prefix_a[i] = prefix_a[i-1] + (s[i] == 'a');
        prefix_b[i] = prefix_b[i-1] + (s[i] == 'b');
    }

    int mi = INT_MAX;
    for(int i = 0; i <= sz; i++){
        for (int j = i; j <= sz; j++){
            int b_first_remove = prefix_b[i];
            int a_middle_remove = prefix_a[j] - prefix_a[i];
            int b_last_remove = prefix_b[sz] - prefix_b[j];
            mi = min(b_first_remove + a_middle_remove + b_last_remove, mi);
        }
    }
    cout << sz - mi << endl;

}
int32_t main(){

    FastIO();
    //UseFile();
    solve();
    return 0;
}
